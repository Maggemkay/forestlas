import numpy as np

def headerstruct():
    return (('filesig', 4,'c',4),
            ('filesourceid', 2,'H',1),
            ('reserved'    , 2,'H',1),
            ('guid1'       , 4,'L',1),
            ('guid2'       , 2,'H',1),
            ('guid3'       , 2,'H',1),
            ('guid4'       , 8,'B',8),
            ('vermajor'    , 1,'B',1),
            ('verminor'    , 1,'B',1),
            ('sysid'       , 32,'c',32),
            ('gensoftware' , 32,'c',32),
            ('fileday'     , 2,'H',1),
            ('fileyear'    , 2,'H',1),
            ('headersize'  , 2,'H',1),
            ('offset'      , 4,'L',1),
            ('numvlrecords', 4,'L',1),
            ('pointformat' , 1,'B',1),
            ('pointreclen' , 2,'H',1),
            ('numptrecords', 4,'L',1),
            ('numptbyreturn', 20,'L',5),
            ('xscale'      , 8,'d',1),
            ('yscale'      , 8,'d',1),
            ('zscale'      , 8,'d',1),
            ('xoffset'     , 8,'d',1),
            ('yoffset'     , 8,'d',1),
            ('zoffset'     , 8,'d',1),
            ('xmax'        , 8,'d',1),
            ('xmin'        , 8,'d',1),
            ('ymax'        , 8,'d',1),
            ('ymin'        , 8,'d',1),
            ('zmax'        , 8,'d',1),
            ('zmin'        , 8,'d',1) )

def point_fmt0struct():
    return ((('x', 4,'l',1) ,
             ('y', 4,'l',1) ,
             ('z', 4,'l',1) ,
             ('i', 2,'H',1) ,
             ('return_grp', 1,'B',1) ,
             ('class', 1,'B',1) ,
             ('scan_ang', 1,'b',1) ,
             ('user_data', 1,'B',1) ,
             ('point_src_id', 2,'H',1)),
             
             np.dtype([('x', np.float), 
             ('y', np.float), 
             ('z', np.float), 
             ('i', np.int), 
             ('rtn_num', np.int), 
             ('rtn_tot', np.int), 
             ('scan_dir', np.int), 
             ('scan_edge', np.int), 
             ('class', np.int), 
             ('scan_ang', np.int), 
             ('user_data', np.int), 
             ('point_src_id', np.int)]))
            
def point_fmt1struct():
    return ((('x', 4,'l',1),
             ('y', 4,'l',1),
             ('z', 4,'l',1),
             ('i', 2,'H',1),
             ('return_grp', 1,'B',1),
             ('class', 1,'B',1),
             ('scan_ang', 1,'b',1),
             ('user_data', 1,'B',1),
             ('point_src_id', 2,'H',1),
             ('gps_time', 8,'d',1)), 
             
             np.dtype([('x', np.float),
             ('y', np.float), 
             ('z', np.float), 
             ('i', np.int), 
             ('rtn_num', np.int),
             ('rtn_tot', np.int),
             ('scan_dir', np.int),
             ('scan_edge', np.int),
             ('class', np.int),
             ('scan_ang', np.int),
             ('user_data', np.int),
             ('point_src_id', np.int),
             ('gps_time', np.float)]))
   
def point_fmt3struct():
     return ((('x', 4,'l',1),
             ('y', 4,'l',1),
             ('z', 4,'l',1),
             ('i', 2,'H',1),
             ('return_grp', 1,'B',1),
             ('class', 1,'B',1),
             ('scan_ang', 1,'b',1),
             ('user_data', 1,'B',1),
             ('point_src_id', 2,'H',1),
             ('gps_time', 8,'d',1), 
             ('r', 2,'H',1),
             ('g', 2,'H',1),
             ('b', 2,'H',1)),

             np.dtype([('x', np.float), 
             ('y', np.float), 
             ('z', np.float), 
             ('i', np.int), 
             ('rtn_num', np.int), 
             ('rtn_tot', np.int), 
             ('scan_dir', np.int), 
             ('scan_edge', np.int), 
             ('class', np.int), 
             ('scan_ang', np.int), 
             ('user_data', np.int), 
             ('point_src_id', np.int), 
             ('gps_time', np.float),
             ('r', np.int), 
             ('g', np.int), 
             ('b', np.int)]))

def znrHeaderStruct():
    return (('filesig', 4,'c',4),
            ('filesourceid', 2,'H',1),
            ('reserved'    , 2,'H',1),
            ('resolution'  , 4,'L',1),
            ('headersize'  , 2,'H',1),
            ('offset'      , 4,'L',1),
            ('numvlrecords', 4,'L',1),
            ('pointreclen' , 2,'H',1),
            ('numptrecords', 4,'L',1),
            ('zscale'      , 8,'d',1),
            ('zoffset'     , 8,'d',1),
            ('xmax'        , 8,'d',1),
            ('xmin'        , 8,'d',1),
            ('ymax'        , 8,'d',1),
            ('ymin'        , 8,'d',1),
            ('zmax'        , 8,'d',1),
            ('zmin'        , 8,'d',1))
             
def znrStruct():
    return ((('z', 4, 'l', 1, np.float),
             ('rtn_tot', 1, 'B', 1, np.int)), 
             
             np.dtype([('z', np.float), 
             ('rtn_tot', np.int)]))

def point_fmtLTstruct():
    return ((('x', 4,'l',1),
             ('y', 4,'l',1),
             ('z', 4,'l',1),
             ('i', 2,'H',1),
             ('return_grp', 1,'B',1),
             ('class', 1,'B',1),
             ('scan_ang', 1,'b',1),
             ('user_data', 1,'B',1),
             ('point_src_id', 2,'H',1),
             ('gps_time', 8,'d',1)), 
             
             np.dtype([('x', np.float), 
             ('y', np.float), 
             ('z', np.float), 
             ('i', np.int), 
             ('rtn_num', np.int), 
             ('rtn_tot', np.int), 
             ('scan_dir', np.int), 
             ('scan_edge', np.int), 
             ('class', np.int), 
             ('scan_ang', np.int), 
             ('user_data', np.int), 
             ('point_src_id', np.int), 
             ('gps_time', np.float)]) )